/**
 * AUSF API
 * AUSF UE Authentication Service. Â© 2020, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The OpenAirInterface Software Alliance licenses this file to You under
 * the OAI Public License, Version 1.1  (the "License"); you may not use this
 *file except in compliance with the License. You may obtain a copy of the
 *License at
 *
 *      http://www.openairinterface.org/?page_id=698
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *-------------------------------------------------------------------------------
 * For more information about the OpenAirInterface (OAI) Software Alliance:
 *      contact@openairinterface.org
 */

/*
 * EapSession.h
 *
 *
 */

#ifndef EapSession_H_
#define EapSession_H_

#include "AuthResult.h"
#include "LinksValueSchema.h"
#include <map>
#include <nlohmann/json.hpp>
#include <string>
#include <vector>

namespace oai {
namespace ausf_server {
namespace model {

/// <summary>
///
/// </summary>
class EapSession {
 public:
  EapSession();
  virtual ~EapSession();

  void validate();

  /////////////////////////////////////////////
  /// EapSession members

  /// <summary>
  /// contains an EAP packet
  /// </summary>
  std::string getEapPayload() const;
  void setEapPayload(std::string const& value);
  /// <summary>
  ///
  /// </summary>
  std::string getKSeaf() const;
  void setKSeaf(std::string const& value);
  bool kSeafIsSet() const;
  void unsetKSeaf();
  /// <summary>
  ///
  /// </summary>
  std::map<std::string, LinksValueSchema>& getLinks();
  void setLinks(std::map<std::string, LinksValueSchema> const& value);
  bool linksIsSet() const;
  void unset_links();
  /// <summary>
  ///
  /// </summary>
  AuthResult getAuthResult() const;
  void setAuthResult(AuthResult const& value);
  bool authResultIsSet() const;
  void unsetAuthResult();
  /// <summary>
  ///
  /// </summary>
  std::string getSupi() const;
  void setSupi(std::string const& value);
  bool supiIsSet() const;
  void unsetSupi();

  friend void to_json(nlohmann::json& j, const EapSession& o);
  friend void from_json(const nlohmann::json& j, EapSession& o);

 protected:
  std::string m_EapPayload;

  std::string m_KSeaf;
  bool m_KSeafIsSet;
  std::map<std::string, LinksValueSchema> m__links;
  bool m__linksIsSet;
  AuthResult m_AuthResult;
  bool m_AuthResultIsSet;
  std::string m_Supi;
  bool m_SupiIsSet;
};

}  // namespace model
}  // namespace ausf_server
}  // namespace oai

#endif /* EapSession_H_ */
