/**
 * Namf_Communication
 * AMF Communication Service Â© 2019, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0.alpha-1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * IndividualSubscriptionDocumentApi.h
 *
 *
 */

#ifndef IndividualSubscriptionDocumentApi_H_
#define IndividualSubscriptionDocumentApi_H_

#include <pistache/http.h>
#include <pistache/router.h>
#include <pistache/http_headers.h>
#include <pistache/optional.h>

#include "ProblemDetails.h"
#include "SubscriptionData.h"
#include <string>

namespace oai {
namespace amf {
namespace api {

using namespace oai::amf::model;

class IndividualSubscriptionDocumentApi {
 public:
  IndividualSubscriptionDocumentApi(std::shared_ptr<Pistache::Rest::Router>);
  virtual ~IndividualSubscriptionDocumentApi() {}
  void init();

  const std::string base = "/namf-comm/";

 private:
  void setupRoutes();

  void a_mf_status_change_subscribe_modfy_handler(
      const Pistache::Rest::Request& request,
      Pistache::Http::ResponseWriter response);
  void a_mf_status_change_un_subscribe_handler(
      const Pistache::Rest::Request& request,
      Pistache::Http::ResponseWriter response);
  void individual_subscription_document_api_default_handler(
      const Pistache::Rest::Request& request,
      Pistache::Http::ResponseWriter response);

  std::shared_ptr<Pistache::Rest::Router> router;

  /// <summary>
  /// Namf_Communication AMF Status Change Subscribe Modify service Operation
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="subscriptionId">AMF Status Change Subscription
  /// Identifier</param> <param name="subscriptionData"></param>
  virtual void a_mf_status_change_subscribe_modfy(
      const std::string& subscriptionId,
      const SubscriptionData& subscriptionData,
      Pistache::Http::ResponseWriter& response) = 0;

  /// <summary>
  /// Namf_Communication AMF Status Change UnSubscribe service Operation
  /// </summary>
  /// <remarks>
  ///
  /// </remarks>
  /// <param name="subscriptionId">AMF Status Change Subscription
  /// Identifier</param>
  virtual void a_mf_status_change_un_subscribe(
      const std::string& subscriptionId,
      Pistache::Http::ResponseWriter& response) = 0;
};

}  // namespace api
}  // namespace amf
}  // namespace oai

#endif /* IndividualSubscriptionDocumentApi_H_ */
