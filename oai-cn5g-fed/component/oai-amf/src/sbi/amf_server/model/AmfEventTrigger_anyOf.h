/**
 * Namf_EventExposure
 * AMF Event Exposure Service Â© 2019, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0.alpha-1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * AmfEventTrigger_anyOf.h
 *
 *
 */

#ifndef AmfEventTrigger_anyOf_H_
#define AmfEventTrigger_anyOf_H_

#include <nlohmann/json.hpp>

namespace oai::amf::model {

/// <summary>
///
/// </summary>
class AmfEventTrigger_anyOf {
 public:
  AmfEventTrigger_anyOf();
  virtual ~AmfEventTrigger_anyOf() = default;

  enum class eAmfEventTrigger_anyOf {
    // To have a valid default value.
    // Avoiding nameclashes with user defined
    // enum values
    INVALID_VALUE_OPENAPI_GENERATED = 0,
    ONE_TIME,
    CONTINUOUS
  };

  /// <summary>
  /// Validate the current data in the model. Throws a ValidationException on
  /// failure.
  /// </summary>
  void validate() const;

  /// <summary>
  /// Validate the current data in the model. Returns false on error and writes
  /// an error message into the given stringstream.
  /// </summary>
  bool validate(std::stringstream& msg) const;

  bool operator==(const AmfEventTrigger_anyOf& rhs) const;
  bool operator!=(const AmfEventTrigger_anyOf& rhs) const;

  /////////////////////////////////////////////
  /// AmfEventTrigger_anyOf members

  AmfEventTrigger_anyOf::eAmfEventTrigger_anyOf getValue() const;
  void setValue(AmfEventTrigger_anyOf::eAmfEventTrigger_anyOf value);

  friend void to_json(nlohmann::json& j, const AmfEventTrigger_anyOf& o);
  friend void from_json(const nlohmann::json& j, AmfEventTrigger_anyOf& o);

 protected:
  AmfEventTrigger_anyOf::eAmfEventTrigger_anyOf m_value =
      AmfEventTrigger_anyOf::eAmfEventTrigger_anyOf::
          INVALID_VALUE_OPENAPI_GENERATED;

  // Helper overload for validate. Used when one model stores another model and
  // calls it's validate.
  bool validate(std::stringstream& msg, const std::string& pathPrefix) const;
};

}  // namespace oai::amf::model

#endif /* AmfEventTrigger_anyOf_H_ */
