/**
 * Namf_Communication
 * AMF Communication Service Â© 2019, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0.alpha-1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * AssignEbiData.h
 *
 *
 */

#ifndef AssignEbiData_H_
#define AssignEbiData_H_

#include <vector>
#include "Arp.h"
#include <nlohmann/json.hpp>

namespace oai {
namespace amf {
namespace model {

/// <summary>
///
/// </summary>
class AssignEbiData {
 public:
  AssignEbiData();
  virtual ~AssignEbiData();

  void validate();

  /////////////////////////////////////////////
  /// AssignEbiData members

  /// <summary>
  ///
  /// </summary>
  int32_t getPduSessionId() const;
  void setPduSessionId(int32_t const value);
  /// <summary>
  ///
  /// </summary>
  std::vector<Arp>& getArpList();
  bool arpListIsSet() const;
  void unsetArpList();
  /// <summary>
  ///
  /// </summary>
  std::vector<int32_t>& getReleasedEbiList();
  bool releasedEbiListIsSet() const;
  void unsetReleasedEbiList();

  friend void to_json(nlohmann::json& j, const AssignEbiData& o);
  friend void from_json(const nlohmann::json& j, AssignEbiData& o);

 protected:
  int32_t m_PduSessionId;

  std::vector<Arp> m_ArpList;
  bool m_ArpListIsSet;
  std::vector<int32_t> m_ReleasedEbiList;
  bool m_ReleasedEbiListIsSet;
};

}  // namespace model
}  // namespace amf
}  // namespace oai

#endif /* AssignEbiData_H_ */
