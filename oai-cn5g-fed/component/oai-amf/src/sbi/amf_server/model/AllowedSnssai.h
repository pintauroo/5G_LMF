/**
 * Namf_Communication
 * AMF Communication Service Â© 2019, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0.alpha-1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * AllowedSnssai.h
 *
 *
 */

#ifndef AllowedSnssai_H_
#define AllowedSnssai_H_

#include "NsiInformation.h"
#include "Snssai.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace oai {
namespace amf {
namespace model {

/// <summary>
///
/// </summary>
class AllowedSnssai {
 public:
  AllowedSnssai();
  virtual ~AllowedSnssai();

  void validate();

  /////////////////////////////////////////////
  /// AllowedSnssai members

  /// <summary>
  ///
  /// </summary>
  Snssai getAllowedSnssai() const;
  void setAllowedSnssai(Snssai const& value);
  /// <summary>
  ///
  /// </summary>
  std::vector<NsiInformation>& getNsiInformationList();
  bool nsiInformationListIsSet() const;
  void unsetNsiInformationList();
  /// <summary>
  ///
  /// </summary>
  Snssai getMappedHomeSnssai() const;
  void setMappedHomeSnssai(Snssai const& value);
  bool mappedHomeSnssaiIsSet() const;
  void unsetMappedHomeSnssai();

  friend void to_json(nlohmann::json& j, const AllowedSnssai& o);
  friend void from_json(const nlohmann::json& j, AllowedSnssai& o);

 protected:
  Snssai m_AllowedSnssai;

  std::vector<NsiInformation> m_NsiInformationList;
  bool m_NsiInformationListIsSet;
  Snssai m_MappedHomeSnssai;
  bool m_MappedHomeSnssaiIsSet;
};

}  // namespace model
}  // namespace amf
}  // namespace oai

#endif /* AllowedSnssai_H_ */
