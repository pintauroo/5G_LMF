/**
 * Namf_Communication
 * AMF Communication Service Â© 2019, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0.alpha-1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AssignEbiData.h"

namespace oai {
namespace amf {
namespace model {

AssignEbiData::AssignEbiData() {
  m_PduSessionId         = 0;
  m_ArpListIsSet         = false;
  m_ReleasedEbiListIsSet = false;
}

AssignEbiData::~AssignEbiData() {}

void AssignEbiData::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json& j, const AssignEbiData& o) {
  j                 = nlohmann::json();
  j["pduSessionId"] = o.m_PduSessionId;
  if (o.arpListIsSet()) j["arpList"] = o.m_ArpList;
  if (o.releasedEbiListIsSet()) j["releasedEbiList"] = o.m_ReleasedEbiList;
}

void from_json(const nlohmann::json& j, AssignEbiData& o) {
  j.at("pduSessionId").get_to(o.m_PduSessionId);
  if (j.find("arpList") != j.end()) {
    j.at("arpList").get_to(o.m_ArpList);
    o.m_ArpListIsSet = true;
  }
  if (j.find("releasedEbiList") != j.end()) {
    j.at("releasedEbiList").get_to(o.m_ReleasedEbiList);
    o.m_ReleasedEbiListIsSet = true;
  }
}

int32_t AssignEbiData::getPduSessionId() const {
  return m_PduSessionId;
}
void AssignEbiData::setPduSessionId(int32_t const value) {
  m_PduSessionId = value;
}
std::vector<Arp>& AssignEbiData::getArpList() {
  return m_ArpList;
}
bool AssignEbiData::arpListIsSet() const {
  return m_ArpListIsSet;
}
void AssignEbiData::unsetArpList() {
  m_ArpListIsSet = false;
}
std::vector<int32_t>& AssignEbiData::getReleasedEbiList() {
  return m_ReleasedEbiList;
}
bool AssignEbiData::releasedEbiListIsSet() const {
  return m_ReleasedEbiListIsSet;
}
void AssignEbiData::unsetReleasedEbiList() {
  m_ReleasedEbiListIsSet = false;
}

}  // namespace model
}  // namespace amf
}  // namespace oai
