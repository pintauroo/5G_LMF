/**
 * Namf_Communication
 * AMF Communication Service Â© 2019, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0.alpha-1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "NsiInformation.h"

namespace oai {
namespace amf {
namespace model {

NsiInformation::NsiInformation() {
  m_NrfId      = "";
  m_NsiId      = "";
  m_NsiIdIsSet = false;
}

NsiInformation::~NsiInformation() {}

void NsiInformation::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json& j, const NsiInformation& o) {
  j          = nlohmann::json();
  j["nrfId"] = o.m_NrfId;
  if (o.nsiIdIsSet()) j["nsiId"] = o.m_NsiId;
}

void from_json(const nlohmann::json& j, NsiInformation& o) {
  j.at("nrfId").get_to(o.m_NrfId);
  if (j.find("nsiId") != j.end()) {
    j.at("nsiId").get_to(o.m_NsiId);
    o.m_NsiIdIsSet = true;
  }
}

std::string NsiInformation::getNrfId() const {
  return m_NrfId;
}
void NsiInformation::setNrfId(std::string const& value) {
  m_NrfId = value;
}
std::string NsiInformation::getNsiId() const {
  return m_NsiId;
}
void NsiInformation::setNsiId(std::string const& value) {
  m_NsiId      = value;
  m_NsiIdIsSet = true;
}
bool NsiInformation::nsiIdIsSet() const {
  return m_NsiIdIsSet;
}
void NsiInformation::unsetNsiId() {
  m_NsiIdIsSet = false;
}

}  // namespace model
}  // namespace amf
}  // namespace oai
