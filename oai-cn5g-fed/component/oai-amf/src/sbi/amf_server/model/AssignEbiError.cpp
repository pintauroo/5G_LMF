/**
 * Namf_Communication
 * AMF Communication Service Â© 2019, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0.alpha-1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "AssignEbiError.h"

namespace oai {
namespace amf {
namespace model {

AssignEbiError::AssignEbiError() {}

AssignEbiError::~AssignEbiError() {}

void AssignEbiError::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json& j, const AssignEbiError& o) {
  j                   = nlohmann::json();
  j["error"]          = o.m_Error;
  j["failureDetails"] = o.m_FailureDetails;
}

void from_json(const nlohmann::json& j, AssignEbiError& o) {
  j.at("error").get_to(o.m_Error);
  j.at("failureDetails").get_to(o.m_FailureDetails);
}

ProblemDetails_2 AssignEbiError::getError() const {
  return m_Error;
}
void AssignEbiError::setError(ProblemDetails_2 const& value) {
  m_Error = value;
}
AssignEbiFailed AssignEbiError::getFailureDetails() const {
  return m_FailureDetails;
}
void AssignEbiError::setFailureDetails(AssignEbiFailed const& value) {
  m_FailureDetails = value;
}

}  // namespace model
}  // namespace amf
}  // namespace oai
