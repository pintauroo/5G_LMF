/**
 * Namf_EventExposure
 * AMF Event Exposure Service Â© 2019, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0.alpha-1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * AmfEventNotification.h
 *
 *
 */

#ifndef AmfEventNotification_H_
#define AmfEventNotification_H_

#include "AmfEventReport.h"
#include <string>
#include <vector>
#include <nlohmann/json.hpp>

namespace oai::amf::model {

/// <summary>
///
/// </summary>
class AmfEventNotification {
 public:
  AmfEventNotification();
  virtual ~AmfEventNotification() = default;

  /// <summary>
  /// Validate the current data in the model. Throws a ValidationException on
  /// failure.
  /// </summary>
  void validate() const;

  /// <summary>
  /// Validate the current data in the model. Returns false on error and writes
  /// an error message into the given stringstream.
  /// </summary>
  bool validate(std::stringstream& msg) const;

  bool operator==(const AmfEventNotification& rhs) const;
  bool operator!=(const AmfEventNotification& rhs) const;

  /////////////////////////////////////////////
  /// AmfEventNotification members

  /// <summary>
  ///
  /// </summary>
  std::string getNotifyCorrelationId() const;
  void setNotifyCorrelationId(std::string const& value);
  bool notifyCorrelationIdIsSet() const;
  void unsetNotifyCorrelationId();
  /// <summary>
  ///
  /// </summary>
  std::string getSubsChangeNotifyCorrelationId() const;
  void setSubsChangeNotifyCorrelationId(std::string const& value);
  bool subsChangeNotifyCorrelationIdIsSet() const;
  void unsetSubsChangeNotifyCorrelationId();
  /// <summary>
  ///
  /// </summary>
  std::vector<AmfEventReport> getReportList() const;
  void setReportList(std::vector<AmfEventReport> const& value);
  bool reportListIsSet() const;
  void unsetReportList();

  friend void to_json(nlohmann::json& j, const AmfEventNotification& o);
  friend void from_json(const nlohmann::json& j, AmfEventNotification& o);

 protected:
  std::string m_NotifyCorrelationId;
  bool m_NotifyCorrelationIdIsSet;
  std::string m_SubsChangeNotifyCorrelationId;
  bool m_SubsChangeNotifyCorrelationIdIsSet;
  std::vector<AmfEventReport> m_ReportList;
  bool m_ReportListIsSet;

  // Helper overload for validate. Used when one model stores another model and
  // calls it's validate.
  bool validate(std::stringstream& msg, const std::string& pathPrefix) const;
};

}  // namespace oai::amf::model

#endif /* AmfEventNotification_H_ */
