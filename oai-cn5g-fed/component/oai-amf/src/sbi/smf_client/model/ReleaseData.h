/**
 * Nsmf_PDUSession
 * SMF PDU Session Service. Â© 2019, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0.alpha-1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 4.1.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ReleaseData.h
 *
 *
 */

#ifndef OAI_SMF_MODEL_ReleaseData_H_
#define OAI_SMF_MODEL_ReleaseData_H_

#include "../ModelBase.h"

#include "NgApCause.h"
#include "SecondaryRatUsageInfo.h"
#include "Cause.h"
#include "UserLocation.h"
#include <cpprest/details/basic_types.h>
#include "SecondaryRatUsageReport.h"
#include <vector>

namespace oai {
namespace smf {
namespace model {

/// <summary>
///
/// </summary>
class ReleaseData : public ModelBase {
 public:
  ReleaseData();
  virtual ~ReleaseData();

  /////////////////////////////////////////////
  /// ModelBase overrides

  void validate() override;

  web::json::value toJson() const override;
  void fromJson(const web::json::value& json) override;

  void toMultipart(
      std::shared_ptr<MultipartFormData> multipart,
      const utility::string_t& namePrefix) const override;
  void fromMultiPart(
      std::shared_ptr<MultipartFormData> multipart,
      const utility::string_t& namePrefix) override;

  /////////////////////////////////////////////
  /// ReleaseData members

  /// <summary>
  ///
  /// </summary>
  std::shared_ptr<Cause> getCause() const;
  bool causeIsSet() const;
  void unsetCause();

  void setCause(const std::shared_ptr<Cause>& value);

  /// <summary>
  ///
  /// </summary>
  std::shared_ptr<NgApCause> getNgApCause() const;
  bool ngApCauseIsSet() const;
  void unsetNgApCause();

  void setNgApCause(const std::shared_ptr<NgApCause>& value);

  /// <summary>
  ///
  /// </summary>
  int32_t get5gMmCauseValue() const;
  bool _5gMmCauseValueIsSet() const;
  void unset_5gMmCauseValue();

  void set5gMmCauseValue(int32_t value);

  /// <summary>
  ///
  /// </summary>
  std::shared_ptr<UserLocation> getUeLocation() const;
  bool ueLocationIsSet() const;
  void unsetUeLocation();

  void setUeLocation(const std::shared_ptr<UserLocation>& value);

  /// <summary>
  ///
  /// </summary>
  utility::string_t getUeTimeZone() const;
  bool ueTimeZoneIsSet() const;
  void unsetUeTimeZone();

  void setUeTimeZone(const utility::string_t& value);

  /// <summary>
  ///
  /// </summary>
  std::shared_ptr<UserLocation> getAddUeLocation() const;
  bool addUeLocationIsSet() const;
  void unsetAddUeLocation();

  void setAddUeLocation(const std::shared_ptr<UserLocation>& value);

  /// <summary>
  ///
  /// </summary>
  std::vector<std::shared_ptr<SecondaryRatUsageReport>>&
  getSecondaryRatUsageReport();
  bool secondaryRatUsageReportIsSet() const;
  void unsetSecondaryRatUsageReport();

  void setSecondaryRatUsageReport(
      const std::vector<std::shared_ptr<SecondaryRatUsageReport>>& value);

  /// <summary>
  ///
  /// </summary>
  std::vector<std::shared_ptr<SecondaryRatUsageInfo>>&
  getSecondaryRatUsageInfo();
  bool secondaryRatUsageInfoIsSet() const;
  void unsetSecondaryRatUsageInfo();

  void setSecondaryRatUsageInfo(
      const std::vector<std::shared_ptr<SecondaryRatUsageInfo>>& value);

 protected:
  std::shared_ptr<Cause> m_Cause;
  bool m_CauseIsSet;
  std::shared_ptr<NgApCause> m_NgApCause;
  bool m_NgApCauseIsSet;
  int32_t m__5gMmCauseValue;
  bool m__5gMmCauseValueIsSet;
  std::shared_ptr<UserLocation> m_UeLocation;
  bool m_UeLocationIsSet;
  utility::string_t m_UeTimeZone;
  bool m_UeTimeZoneIsSet;
  std::shared_ptr<UserLocation> m_AddUeLocation;
  bool m_AddUeLocationIsSet;
  std::vector<std::shared_ptr<SecondaryRatUsageReport>>
      m_SecondaryRatUsageReport;
  bool m_SecondaryRatUsageReportIsSet;
  std::vector<std::shared_ptr<SecondaryRatUsageInfo>> m_SecondaryRatUsageInfo;
  bool m_SecondaryRatUsageInfoIsSet;
};

}  // namespace model
}  // namespace smf
}  // namespace oai

#endif /* OAI_SMF_MODEL_ReleaseData_H_ */
