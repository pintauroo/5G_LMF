/**
 * NRF NFManagement Service
 * NRF NFManagement Service. Â© 2019, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0.alpha-1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * N2InterfaceAmfInfo.h
 *
 *
 */

#ifndef N2InterfaceAmfInfo_H_
#define N2InterfaceAmfInfo_H_

#include <string>
#include "Ipv6Addr.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace oai {
namespace nrf {
namespace model {

/// <summary>
///
/// </summary>
class N2InterfaceAmfInfo {
 public:
  N2InterfaceAmfInfo();
  virtual ~N2InterfaceAmfInfo();

  void validate();

  /////////////////////////////////////////////
  /// N2InterfaceAmfInfo members

  /// <summary>
  ///
  /// </summary>
  std::vector<std::string>& getIpv4EndpointAddress();
  void setIpv4EndpointAddress(std::vector<std::string> const& value);
  bool ipv4EndpointAddressIsSet() const;
  void unsetIpv4EndpointAddress();
  /// <summary>
  ///
  /// </summary>
  std::vector<Ipv6Addr>& getIpv6EndpointAddress();
  void setIpv6EndpointAddress(std::vector<Ipv6Addr> const& value);
  bool ipv6EndpointAddressIsSet() const;
  void unsetIpv6EndpointAddress();
  /// <summary>
  ///
  /// </summary>
  std::string getAmfName() const;
  void setAmfName(std::string const& value);
  bool amfNameIsSet() const;
  void unsetAmfName();

  friend void to_json(nlohmann::json& j, const N2InterfaceAmfInfo& o);
  friend void from_json(const nlohmann::json& j, N2InterfaceAmfInfo& o);

 protected:
  std::vector<std::string> m_Ipv4EndpointAddress;
  bool m_Ipv4EndpointAddressIsSet;
  std::vector<Ipv6Addr> m_Ipv6EndpointAddress;
  bool m_Ipv6EndpointAddressIsSet;
  std::string m_AmfName;
  bool m_AmfNameIsSet;
};

}  // namespace model
}  // namespace nrf
}  // namespace oai

#endif /* N2InterfaceAmfInfo_H_ */
