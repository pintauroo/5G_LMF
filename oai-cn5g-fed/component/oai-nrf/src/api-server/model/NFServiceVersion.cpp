/**
 * NRF NFManagement Service
 * NRF NFManagement Service. Â© 2019, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0.alpha-1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "NFServiceVersion.h"

namespace oai {
namespace nrf {
namespace model {

NFServiceVersion::NFServiceVersion() {
  m_ApiVersionInUri = "";
  m_ApiFullVersion  = "";
  m_Expiry          = "";
  m_ExpiryIsSet     = false;
}

NFServiceVersion::~NFServiceVersion() {}

void NFServiceVersion::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json& j, const NFServiceVersion& o) {
  j                    = nlohmann::json();
  j["apiVersionInUri"] = o.m_ApiVersionInUri;
  j["apiFullVersion"]  = o.m_ApiFullVersion;
  if (o.expiryIsSet()) j["expiry"] = o.m_Expiry;
}

void from_json(const nlohmann::json& j, NFServiceVersion& o) {
  j.at("apiVersionInUri").get_to(o.m_ApiVersionInUri);
  j.at("apiFullVersion").get_to(o.m_ApiFullVersion);
  if (j.find("expiry") != j.end()) {
    j.at("expiry").get_to(o.m_Expiry);
    o.m_ExpiryIsSet = true;
  }
}

std::string NFServiceVersion::getApiVersionInUri() const {
  return m_ApiVersionInUri;
}
void NFServiceVersion::setApiVersionInUri(std::string const& value) {
  m_ApiVersionInUri = value;
}
std::string NFServiceVersion::getApiFullVersion() const {
  return m_ApiFullVersion;
}
void NFServiceVersion::setApiFullVersion(std::string const& value) {
  m_ApiFullVersion = value;
}
std::string NFServiceVersion::getExpiry() const {
  return m_Expiry;
}
void NFServiceVersion::setExpiry(std::string const& value) {
  m_Expiry      = value;
  m_ExpiryIsSet = true;
}
bool NFServiceVersion::expiryIsSet() const {
  return m_ExpiryIsSet;
}
void NFServiceVersion::unsetExpiry() {
  m_ExpiryIsSet = false;
}

}  // namespace model
}  // namespace nrf
}  // namespace oai
