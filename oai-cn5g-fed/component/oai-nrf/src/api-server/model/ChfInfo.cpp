/**
 * NRF NFManagement Service
 * NRF NFManagement Service. Â© 2019, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0.alpha-1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "ChfInfo.h"

namespace oai {
namespace nrf {
namespace model {

ChfInfo::ChfInfo() {
  m_SupiRangeListIsSet = false;
  m_GpsiRangeListIsSet = false;
  m_PlmnRangeListIsSet = false;
}

ChfInfo::~ChfInfo() {}

void ChfInfo::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json& j, const ChfInfo& o) {
  j = nlohmann::json();
  if (o.supiRangeListIsSet() || !o.m_SupiRangeList.empty())
    j["supiRangeList"] = o.m_SupiRangeList;
  if (o.gpsiRangeListIsSet() || !o.m_GpsiRangeList.empty())
    j["gpsiRangeList"] = o.m_GpsiRangeList;
  if (o.plmnRangeListIsSet() || !o.m_PlmnRangeList.empty())
    j["plmnRangeList"] = o.m_PlmnRangeList;
}

void from_json(const nlohmann::json& j, ChfInfo& o) {
  if (j.find("supiRangeList") != j.end()) {
    j.at("supiRangeList").get_to(o.m_SupiRangeList);
    o.m_SupiRangeListIsSet = true;
  }
  if (j.find("gpsiRangeList") != j.end()) {
    j.at("gpsiRangeList").get_to(o.m_GpsiRangeList);
    o.m_GpsiRangeListIsSet = true;
  }
  if (j.find("plmnRangeList") != j.end()) {
    j.at("plmnRangeList").get_to(o.m_PlmnRangeList);
    o.m_PlmnRangeListIsSet = true;
  }
}

std::vector<SupiRange>& ChfInfo::getSupiRangeList() {
  return m_SupiRangeList;
}
void ChfInfo::setSupiRangeList(std::vector<SupiRange> const& value) {
  m_SupiRangeList      = value;
  m_SupiRangeListIsSet = true;
}
bool ChfInfo::supiRangeListIsSet() const {
  return m_SupiRangeListIsSet;
}
void ChfInfo::unsetSupiRangeList() {
  m_SupiRangeListIsSet = false;
}
std::vector<IdentityRange>& ChfInfo::getGpsiRangeList() {
  return m_GpsiRangeList;
}
void ChfInfo::setGpsiRangeList(std::vector<IdentityRange> const& value) {
  m_GpsiRangeList      = value;
  m_GpsiRangeListIsSet = true;
}
bool ChfInfo::gpsiRangeListIsSet() const {
  return m_GpsiRangeListIsSet;
}
void ChfInfo::unsetGpsiRangeList() {
  m_GpsiRangeListIsSet = false;
}
std::vector<PlmnRange>& ChfInfo::getPlmnRangeList() {
  return m_PlmnRangeList;
}
void ChfInfo::setPlmnRangeList(std::vector<PlmnRange> const& value) {
  m_PlmnRangeList      = value;
  m_PlmnRangeListIsSet = true;
}
bool ChfInfo::plmnRangeListIsSet() const {
  return m_PlmnRangeListIsSet;
}
void ChfInfo::unsetPlmnRangeList() {
  m_PlmnRangeListIsSet = false;
}

}  // namespace model
}  // namespace nrf
}  // namespace oai
