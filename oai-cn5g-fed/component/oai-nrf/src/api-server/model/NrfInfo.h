/**
 * NRF NFManagement Service
 * NRF NFManagement Service. Â© 2019, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0.alpha-1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * NrfInfo.h
 *
 *
 */

#ifndef NrfInfo_H_
#define NrfInfo_H_

#include "BsfInfo.h"
#include "UdrInfo.h"
#include "PcfInfo.h"
#include "UdmInfo.h"
#include "UpfInfo.h"
#include "ChfInfo.h"
#include "SmfInfo.h"
#include <map>
#include <vector>
#include "AmfInfo.h"
#include "AusfInfo.h"
#include "NwdafInfo.h"
#include <nlohmann/json.hpp>

namespace oai {
namespace nrf {
namespace model {

/// <summary>
///
/// </summary>
class NrfInfo {
 public:
  NrfInfo();
  virtual ~NrfInfo();

  void validate();

  /////////////////////////////////////////////
  /// NrfInfo members

  /// <summary>
  ///
  /// </summary>
  std::map<std::string, UdrInfo>& getServedUdrInfo();
  void setServedUdrInfo(std::map<std::string, UdrInfo> const& value);
  bool servedUdrInfoIsSet() const;
  void unsetServedUdrInfo();
  /// <summary>
  ///
  /// </summary>
  std::map<std::string, UdmInfo>& getServedUdmInfo();
  void setServedUdmInfo(std::map<std::string, UdmInfo> const& value);
  bool servedUdmInfoIsSet() const;
  void unsetServedUdmInfo();
  /// <summary>
  ///
  /// </summary>
  std::map<std::string, AusfInfo>& getServedAusfInfo();
  void setServedAusfInfo(std::map<std::string, AusfInfo> const& value);
  bool servedAusfInfoIsSet() const;
  void unsetServedAusfInfo();
  /// <summary>
  ///
  /// </summary>
  std::map<std::string, AmfInfo>& getServedAmfInfo();
  void setServedAmfInfo(std::map<std::string, AmfInfo> const& value);
  bool servedAmfInfoIsSet() const;
  void unsetServedAmfInfo();
  /// <summary>
  ///
  /// </summary>
  std::map<std::string, SmfInfo>& getServedSmfInfo();
  void setServedSmfInfo(std::map<std::string, SmfInfo> const& value);
  bool servedSmfInfoIsSet() const;
  void unsetServedSmfInfo();
  /// <summary>
  ///
  /// </summary>
  std::map<std::string, UpfInfo>& getServedUpfInfo();
  void setServedUpfInfo(std::map<std::string, UpfInfo> const& value);
  bool servedUpfInfoIsSet() const;
  void unsetServedUpfInfo();
  /// <summary>
  ///
  /// </summary>
  std::map<std::string, PcfInfo>& getServedPcfInfo();
  void setServedPcfInfo(std::map<std::string, PcfInfo> const& value);
  bool servedPcfInfoIsSet() const;
  void unsetServedPcfInfo();
  /// <summary>
  ///
  /// </summary>
  std::map<std::string, BsfInfo>& getServedBsfInfo();
  void setServedBsfInfo(std::map<std::string, BsfInfo> const& value);
  bool servedBsfInfoIsSet() const;
  void unsetServedBsfInfo();
  /// <summary>
  ///
  /// </summary>
  std::map<std::string, ChfInfo>& getServedChfInfo();
  void setServedChfInfo(std::map<std::string, ChfInfo> const& value);
  bool servedChfInfoIsSet() const;
  void unsetServedChfInfo();
  /// <summary>
  ///
  /// </summary>
  std::map<std::string, NwdafInfo>& getServedNwdafInfo();
  void setServedNwdafInfo(std::map<std::string, NwdafInfo> const& value);
  bool servedNwdafInfoIsSet() const;
  void unsetServedNwdafInfo();

  friend void to_json(nlohmann::json& j, const NrfInfo& o);
  friend void from_json(const nlohmann::json& j, NrfInfo& o);

 protected:
  std::map<std::string, UdrInfo> m_ServedUdrInfo;
  bool m_ServedUdrInfoIsSet;
  std::map<std::string, UdmInfo> m_ServedUdmInfo;
  bool m_ServedUdmInfoIsSet;
  std::map<std::string, AusfInfo> m_ServedAusfInfo;
  bool m_ServedAusfInfoIsSet;
  std::map<std::string, AmfInfo> m_ServedAmfInfo;
  bool m_ServedAmfInfoIsSet;
  std::map<std::string, SmfInfo> m_ServedSmfInfo;
  bool m_ServedSmfInfoIsSet;
  std::map<std::string, UpfInfo> m_ServedUpfInfo;
  bool m_ServedUpfInfoIsSet;
  std::map<std::string, PcfInfo> m_ServedPcfInfo;
  bool m_ServedPcfInfoIsSet;
  std::map<std::string, BsfInfo> m_ServedBsfInfo;
  bool m_ServedBsfInfoIsSet;
  std::map<std::string, ChfInfo> m_ServedChfInfo;
  bool m_ServedChfInfoIsSet;
  std::map<std::string, NwdafInfo> m_ServedNwdafInfo;
  bool m_ServedNwdafInfoIsSet;
};

}  // namespace model
}  // namespace nrf
}  // namespace oai

#endif /* NrfInfo_H_ */
