/**
 * NSSF NS Selection
 * NSSF Network Slice Selection Service. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 2.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * RoamingIndication_anyOf.h
 *
 *
 */

#ifndef RoamingIndication_anyOf_H_
#define RoamingIndication_anyOf_H_

#include <nlohmann/json.hpp>

namespace oai {
namespace nssf_server {
namespace model {

/// <summary>
///
/// </summary>
class RoamingIndication_anyOf {
 public:
  RoamingIndication_anyOf();
  virtual ~RoamingIndication_anyOf() = default;

  enum class eRoamingIndication_anyOf {
    // To have a valid default value.
    // Avoiding nameclashes with user defined
    // enum values
    INVALID_VALUE_OPENAPI_GENERATED = 0,
    NON_ROAMING,
    LOCAL_BREAKOUT,
    HOME_ROUTED_ROAMING
  };

  /// <summary>
  /// Validate the current data in the model. Throws a ValidationException on
  /// failure.
  /// </summary>
  void validate() const;

  /// <summary>
  /// Validate the current data in the model. Returns false on error and writes
  /// an error message into the given stringstream.
  /// </summary>
  bool validate(std::stringstream& msg) const;

  /// <summary>
  /// Helper overload for validate. Used when one model stores another model and
  /// calls it's validate. Not meant to be called outside that case.
  /// </summary>
  bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

  bool operator==(const RoamingIndication_anyOf& rhs) const;
  bool operator!=(const RoamingIndication_anyOf& rhs) const;

  /////////////////////////////////////////////
  /// RoamingIndication_anyOf members

  RoamingIndication_anyOf::eRoamingIndication_anyOf getValue() const;
  void setValue(RoamingIndication_anyOf::eRoamingIndication_anyOf value);

  friend void to_json(nlohmann::json& j, const RoamingIndication_anyOf& o);
  friend void from_json(const nlohmann::json& j, RoamingIndication_anyOf& o);

 protected:
  RoamingIndication_anyOf::eRoamingIndication_anyOf m_value =
      RoamingIndication_anyOf::eRoamingIndication_anyOf::
          INVALID_VALUE_OPENAPI_GENERATED;
};

}  // namespace model
}  // namespace nssf_server
}  // namespace oai

#endif /* RoamingIndication_anyOf_H_ */
