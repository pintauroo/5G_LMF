/**
 * NSSF NSSAI Availability
 * NSSF NSSAI Availability Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "NssfEventType.h"
#include "Helpers.h"

#include <sstream>

namespace oai {
namespace nssf_server {
namespace model {

NssfEventType::NssfEventType() {}

void NssfEventType::validate() const {
  std::stringstream msg;
  // if (!validate(msg))
  // {
  //     throw oai::nssf_server::helpers::ValidationException(msg.str());
  // }
}

bool NssfEventType::validate(std::stringstream& msg) const {
  return validate(msg, "");
}

bool NssfEventType::validate(
    std::stringstream& msg, const std::string& pathPrefix) const {
  bool success = true;
  const std::string _pathPrefix =
      pathPrefix.empty() ? "NssfEventType" : pathPrefix;

  if (!m_value.validate(msg)) {
    success = false;
  }
  return success;
}

bool NssfEventType::operator==(const NssfEventType& rhs) const {
  return

      getValue() == rhs.getValue();
}

bool NssfEventType::operator!=(const NssfEventType& rhs) const {
  return !(*this == rhs);
}

void to_json(nlohmann::json& j, const NssfEventType& o) {
  j = nlohmann::json();
  to_json(j, o.m_value);
}

void from_json(const nlohmann::json& j, NssfEventType& o) {
  from_json(j, o.m_value);
}

NssfEventType_anyOf NssfEventType::getValue() const {
  return m_value;
}

void NssfEventType::setValue(NssfEventType_anyOf value) {
  m_value = value;
}

NssfEventType_anyOf::eNssfEventType_anyOf NssfEventType::getEnumValue() const {
  return m_value.getValue();
}

void NssfEventType::setEnumValue(
    NssfEventType_anyOf::eNssfEventType_anyOf value) {
  m_value.setValue(value);
}

}  // namespace model
}  // namespace nssf_server
}  // namespace oai
