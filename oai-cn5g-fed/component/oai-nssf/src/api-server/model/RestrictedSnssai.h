/**
 * NSSF NSSAI Availability
 * NSSF NSSAI Availability Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * RestrictedSnssai.h
 *
 *
 */

#ifndef RestrictedSnssai_H_
#define RestrictedSnssai_H_

#include "ExtSnssai.h"
#include "PlmnId.h"
#include <nlohmann/json.hpp>
#include <vector>

namespace oai {
namespace nssf_server {
namespace model {

/// <summary>
///
/// </summary>
class RestrictedSnssai {
 public:
  RestrictedSnssai();
  virtual ~RestrictedSnssai() = default;

  /// <summary>
  /// Validate the current data in the model. Throws a ValidationException on
  /// failure.
  /// </summary>
  void validate() const;

  /// <summary>
  /// Validate the current data in the model. Returns false on error and writes
  /// an error message into the given stringstream.
  /// </summary>
  bool validate(std::stringstream& msg) const;

  /// <summary>
  /// Helper overload for validate. Used when one model stores another model and
  /// calls it's validate. Not meant to be called outside that case.
  /// </summary>
  bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

  bool operator==(const RestrictedSnssai& rhs) const;
  bool operator!=(const RestrictedSnssai& rhs) const;

  /////////////////////////////////////////////
  /// RestrictedSnssai members

  /// <summary>
  ///
  /// </summary>
  PlmnId getHomePlmnId() const;
  void setHomePlmnId(PlmnId const& value);
  /// <summary>
  ///
  /// </summary>
  std::vector<ExtSnssai> getSNssaiList() const;
  void setSNssaiList(std::vector<ExtSnssai> const& value);
  /// <summary>
  ///
  /// </summary>
  std::vector<PlmnId> getHomePlmnIdList() const;
  void setHomePlmnIdList(std::vector<PlmnId> const& value);
  bool homePlmnIdListIsSet() const;
  void unsetHomePlmnIdList();
  /// <summary>
  ///
  /// </summary>
  bool isRoamingRestriction() const;
  void setRoamingRestriction(bool const value);
  bool roamingRestrictionIsSet() const;
  void unsetRoamingRestriction();

  friend void to_json(nlohmann::json& j, const RestrictedSnssai& o);
  friend void from_json(const nlohmann::json& j, RestrictedSnssai& o);

 protected:
  PlmnId m_HomePlmnId;

  std::vector<ExtSnssai> m_SNssaiList;

  std::vector<PlmnId> m_HomePlmnIdList;
  bool m_HomePlmnIdListIsSet;
  bool m_RoamingRestriction;
  bool m_RoamingRestrictionIsSet;
};

}  // namespace model
}  // namespace nssf_server
}  // namespace oai

#endif /* RestrictedSnssai_H_ */
