/*
 * Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The OpenAirInterface Software Alliance licenses this file to You under
 * the OAI Public License, Version 1.1  (the "License"); you may not use this
 * file except in compliance with the License. You may obtain a copy of the
 * License at
 *
 *      http://www.openairinterface.org/?page_id=698
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *-------------------------------------------------------------------------------
 * For more information about the OpenAirInterface (OAI) Software Alliance:
 *      contact@openairinterface.org
 */
/**
 * Nudr_DataRepository API OpenAPI file
 * Unified Data Repository Service. Â© 2020, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 2.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "PfdDataForAppExt_allOf.h"

namespace oai::udr::model {

PfdDataForAppExt_allOf::PfdDataForAppExt_allOf() {
  m_SuppFeat = "";
  m_SuppFeatIsSet = false;
}

PfdDataForAppExt_allOf::~PfdDataForAppExt_allOf() {}

void PfdDataForAppExt_allOf::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const PfdDataForAppExt_allOf &o) {
  j = nlohmann::json();
  if (o.suppFeatIsSet())
    j["suppFeat"] = o.m_SuppFeat;
}

void from_json(const nlohmann::json &j, PfdDataForAppExt_allOf &o) {
  if (j.find("suppFeat") != j.end()) {
    j.at("suppFeat").get_to(o.m_SuppFeat);
    o.m_SuppFeatIsSet = true;
  }
}

std::string PfdDataForAppExt_allOf::getSuppFeat() const { return m_SuppFeat; }
void PfdDataForAppExt_allOf::setSuppFeat(std::string const &value) {
  m_SuppFeat = value;
  m_SuppFeatIsSet = true;
}
bool PfdDataForAppExt_allOf::suppFeatIsSet() const { return m_SuppFeatIsSet; }
void PfdDataForAppExt_allOf::unsetSuppFeat() { m_SuppFeatIsSet = false; }

} // namespace oai::udr::model
