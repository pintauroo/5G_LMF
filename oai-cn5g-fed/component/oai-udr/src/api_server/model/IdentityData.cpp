/*
 * Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The OpenAirInterface Software Alliance licenses this file to You under
 * the OAI Public License, Version 1.1  (the "License"); you may not use this
 * file except in compliance with the License. You may obtain a copy of the
 * License at
 *
 *      http://www.openairinterface.org/?page_id=698
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *-------------------------------------------------------------------------------
 * For more information about the OpenAirInterface (OAI) Software Alliance:
 *      contact@openairinterface.org
 */
/**
 * Nudr_DataRepository API OpenAPI file
 * Unified Data Repository Service. Â© 2020, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 2.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "IdentityData.h"

namespace oai::udr::model {

IdentityData::IdentityData() {
  m_SupiListIsSet = false;
  m_GpsiListIsSet = false;
}

IdentityData::~IdentityData() {}

void IdentityData::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const IdentityData &o) {
  j = nlohmann::json();
  if (o.supiListIsSet() || !o.m_SupiList.empty())
    j["supiList"] = o.m_SupiList;
  if (o.gpsiListIsSet() || !o.m_GpsiList.empty())
    j["gpsiList"] = o.m_GpsiList;
}

void from_json(const nlohmann::json &j, IdentityData &o) {
  if (j.find("supiList") != j.end()) {
    j.at("supiList").get_to(o.m_SupiList);
    o.m_SupiListIsSet = true;
  }
  if (j.find("gpsiList") != j.end()) {
    j.at("gpsiList").get_to(o.m_GpsiList);
    o.m_GpsiListIsSet = true;
  }
}

std::vector<std::string> &IdentityData::getSupiList() { return m_SupiList; }
void IdentityData::setSupiList(std::vector<std::string> const &value) {
  m_SupiList = value;
  m_SupiListIsSet = true;
}
bool IdentityData::supiListIsSet() const { return m_SupiListIsSet; }
void IdentityData::unsetSupiList() { m_SupiListIsSet = false; }
std::vector<std::string> &IdentityData::getGpsiList() { return m_GpsiList; }
void IdentityData::setGpsiList(std::vector<std::string> const &value) {
  m_GpsiList = value;
  m_GpsiListIsSet = true;
}
bool IdentityData::gpsiListIsSet() const { return m_GpsiListIsSet; }
void IdentityData::unsetGpsiList() { m_GpsiListIsSet = false; }

} // namespace oai::udr::model
