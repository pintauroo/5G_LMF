/*
 * Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The OpenAirInterface Software Alliance licenses this file to You under
 * the OAI Public License, Version 1.1  (the "License"); you may not use this
 * file except in compliance with the License. You may obtain a copy of the
 * License at
 *
 *      http://www.openairinterface.org/?page_id=698
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *-------------------------------------------------------------------------------
 * For more information about the OpenAirInterface (OAI) Software Alliance:
 *      contact@openairinterface.org
 */
/**
 * Nudr_DataRepository API OpenAPI file
 * Unified Data Repository Service. Â© 2020, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 2.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * ChargingInformation.h
 *
 *
 */

#ifndef ChargingInformation_H_
#define ChargingInformation_H_

#include <nlohmann/json.hpp>
#include <string>

namespace oai::udr::model {

/// <summary>
///
/// </summary>
class ChargingInformation {
public:
  ChargingInformation();
  virtual ~ChargingInformation();

  void validate();

  /////////////////////////////////////////////
  /// ChargingInformation members

  /// <summary>
  ///
  /// </summary>
  std::string getPrimaryChfAddress() const;
  void setPrimaryChfAddress(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  std::string getSecondaryChfAddress() const;
  void setSecondaryChfAddress(std::string const &value);
  /// <summary>
  ///
  /// </summary>
  std::string getPrimaryChfSetId() const;
  void setPrimaryChfSetId(std::string const &value);
  bool primaryChfSetIdIsSet() const;
  void unsetPrimaryChfSetId();
  /// <summary>
  ///
  /// </summary>
  std::string getPrimaryChfInstanceId() const;
  void setPrimaryChfInstanceId(std::string const &value);
  bool primaryChfInstanceIdIsSet() const;
  void unsetPrimaryChfInstanceId();
  /// <summary>
  ///
  /// </summary>
  std::string getSecondaryChfSetId() const;
  void setSecondaryChfSetId(std::string const &value);
  bool secondaryChfSetIdIsSet() const;
  void unsetSecondaryChfSetId();
  /// <summary>
  ///
  /// </summary>
  std::string getSecondaryChfInstanceId() const;
  void setSecondaryChfInstanceId(std::string const &value);
  bool secondaryChfInstanceIdIsSet() const;
  void unsetSecondaryChfInstanceId();

  friend void to_json(nlohmann::json &j, const ChargingInformation &o);
  friend void from_json(const nlohmann::json &j, ChargingInformation &o);

protected:
  std::string m_PrimaryChfAddress;

  std::string m_SecondaryChfAddress;

  std::string m_PrimaryChfSetId;
  bool m_PrimaryChfSetIdIsSet;
  std::string m_PrimaryChfInstanceId;
  bool m_PrimaryChfInstanceIdIsSet;
  std::string m_SecondaryChfSetId;
  bool m_SecondaryChfSetIdIsSet;
  std::string m_SecondaryChfInstanceId;
  bool m_SecondaryChfInstanceIdIsSet;
};

} // namespace oai::udr::model

#endif /* ChargingInformation_H_ */
