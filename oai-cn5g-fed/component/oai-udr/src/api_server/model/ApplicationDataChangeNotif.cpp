/*
 * Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The OpenAirInterface Software Alliance licenses this file to You under
 * the OAI Public License, Version 1.1  (the "License"); you may not use this
 * file except in compliance with the License. You may obtain a copy of the
 * License at
 *
 *      http://www.openairinterface.org/?page_id=698
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *-------------------------------------------------------------------------------
 * For more information about the OpenAirInterface (OAI) Software Alliance:
 *      contact@openairinterface.org
 */
/**
 * Nudr_DataRepository API OpenAPI file
 * Unified Data Repository Service. Â© 2020, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 2.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "ApplicationDataChangeNotif.h"

namespace oai::udr::model {

ApplicationDataChangeNotif::ApplicationDataChangeNotif() {
  m_IptvConfigDataIsSet = false;
  m_PfdDataIsSet = false;
  m_BdtPolicyDataIsSet = false;
  m_ResUri = "";
  m_SerParamDataIsSet = false;
}

ApplicationDataChangeNotif::~ApplicationDataChangeNotif() {}

void ApplicationDataChangeNotif::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const ApplicationDataChangeNotif &o) {
  j = nlohmann::json();
  if (o.iptvConfigDataIsSet())
    j["iptvConfigData"] = o.m_IptvConfigData;
  if (o.pfdDataIsSet())
    j["pfdData"] = o.m_PfdData;
  if (o.bdtPolicyDataIsSet())
    j["bdtPolicyData"] = o.m_BdtPolicyData;
  j["resUri"] = o.m_ResUri;
  if (o.serParamDataIsSet())
    j["serParamData"] = o.m_SerParamData;
}

void from_json(const nlohmann::json &j, ApplicationDataChangeNotif &o) {
  if (j.find("iptvConfigData") != j.end()) {
    j.at("iptvConfigData").get_to(o.m_IptvConfigData);
    o.m_IptvConfigDataIsSet = true;
  }
  if (j.find("pfdData") != j.end()) {
    j.at("pfdData").get_to(o.m_PfdData);
    o.m_PfdDataIsSet = true;
  }
  if (j.find("bdtPolicyData") != j.end()) {
    j.at("bdtPolicyData").get_to(o.m_BdtPolicyData);
    o.m_BdtPolicyDataIsSet = true;
  }
  j.at("resUri").get_to(o.m_ResUri);
  if (j.find("serParamData") != j.end()) {
    j.at("serParamData").get_to(o.m_SerParamData);
    o.m_SerParamDataIsSet = true;
  }
}

IptvConfigData ApplicationDataChangeNotif::getIptvConfigData() const {
  return m_IptvConfigData;
}
void ApplicationDataChangeNotif::setIptvConfigData(
    IptvConfigData const &value) {
  m_IptvConfigData = value;
  m_IptvConfigDataIsSet = true;
}
bool ApplicationDataChangeNotif::iptvConfigDataIsSet() const {
  return m_IptvConfigDataIsSet;
}
void ApplicationDataChangeNotif::unsetIptvConfigData() {
  m_IptvConfigDataIsSet = false;
}
PfdChangeNotification ApplicationDataChangeNotif::getPfdData() const {
  return m_PfdData;
}
void ApplicationDataChangeNotif::setPfdData(
    PfdChangeNotification const &value) {
  m_PfdData = value;
  m_PfdDataIsSet = true;
}
bool ApplicationDataChangeNotif::pfdDataIsSet() const { return m_PfdDataIsSet; }
void ApplicationDataChangeNotif::unsetPfdData() { m_PfdDataIsSet = false; }
BdtPolicyData ApplicationDataChangeNotif::getBdtPolicyData() const {
  return m_BdtPolicyData;
}
void ApplicationDataChangeNotif::setBdtPolicyData(BdtPolicyData const &value) {
  m_BdtPolicyData = value;
  m_BdtPolicyDataIsSet = true;
}
bool ApplicationDataChangeNotif::bdtPolicyDataIsSet() const {
  return m_BdtPolicyDataIsSet;
}
void ApplicationDataChangeNotif::unsetBdtPolicyData() {
  m_BdtPolicyDataIsSet = false;
}
std::string ApplicationDataChangeNotif::getResUri() const { return m_ResUri; }
void ApplicationDataChangeNotif::setResUri(std::string const &value) {
  m_ResUri = value;
}
ServiceParameterData ApplicationDataChangeNotif::getSerParamData() const {
  return m_SerParamData;
}
void ApplicationDataChangeNotif::setSerParamData(
    ServiceParameterData const &value) {
  m_SerParamData = value;
  m_SerParamDataIsSet = true;
}
bool ApplicationDataChangeNotif::serParamDataIsSet() const {
  return m_SerParamDataIsSet;
}
void ApplicationDataChangeNotif::unsetSerParamData() {
  m_SerParamDataIsSet = false;
}

} // namespace oai::udr::model
