/*
 * Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The OpenAirInterface Software Alliance licenses this file to You under
 * the OAI Public License, Version 1.1  (the "License"); you may not use this
 * file except in compliance with the License. You may obtain a copy of the
 * License at
 *
 *      http://www.openairinterface.org/?page_id=698
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *-------------------------------------------------------------------------------
 * For more information about the OpenAirInterface (OAI) Software Alliance:
 *      contact@openairinterface.org
 */
/**
 * Nudr_DataRepository API OpenAPI file
 * Unified Data Repository Service. Â© 2020, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 2.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "WirelineServiceAreaRestriction.h"

namespace oai::udr::model {

WirelineServiceAreaRestriction::WirelineServiceAreaRestriction() {
  m_RestrictionTypeIsSet = false;
  m_AreasIsSet = false;
}

WirelineServiceAreaRestriction::~WirelineServiceAreaRestriction() {}

void WirelineServiceAreaRestriction::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json &j, const WirelineServiceAreaRestriction &o) {
  j = nlohmann::json();
  if (o.restrictionTypeIsSet())
    j["restrictionType"] = o.m_RestrictionType;
  if (o.areasIsSet() || !o.m_Areas.empty())
    j["areas"] = o.m_Areas;
}

void from_json(const nlohmann::json &j, WirelineServiceAreaRestriction &o) {
  if (j.find("restrictionType") != j.end()) {
    j.at("restrictionType").get_to(o.m_RestrictionType);
    o.m_RestrictionTypeIsSet = true;
  }
  if (j.find("areas") != j.end()) {
    j.at("areas").get_to(o.m_Areas);
    o.m_AreasIsSet = true;
  }
}

RestrictionType WirelineServiceAreaRestriction::getRestrictionType() const {
  return m_RestrictionType;
}
void WirelineServiceAreaRestriction::setRestrictionType(
    RestrictionType const &value) {
  m_RestrictionType = value;
  m_RestrictionTypeIsSet = true;
}
bool WirelineServiceAreaRestriction::restrictionTypeIsSet() const {
  return m_RestrictionTypeIsSet;
}
void WirelineServiceAreaRestriction::unsetRestrictionType() {
  m_RestrictionTypeIsSet = false;
}
std::vector<WirelineArea> &WirelineServiceAreaRestriction::getAreas() {
  return m_Areas;
}
void WirelineServiceAreaRestriction::setAreas(
    std::vector<WirelineArea> const &value) {
  m_Areas = value;
  m_AreasIsSet = true;
}
bool WirelineServiceAreaRestriction::areasIsSet() const { return m_AreasIsSet; }
void WirelineServiceAreaRestriction::unsetAreas() { m_AreasIsSet = false; }

} // namespace oai::udr::model
