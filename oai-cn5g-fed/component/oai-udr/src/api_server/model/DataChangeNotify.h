/*
 * Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The OpenAirInterface Software Alliance licenses this file to You under
 * the OAI Public License, Version 1.1  (the "License"); you may not use this
 * file except in compliance with the License. You may obtain a copy of the
 * License at
 *
 *      http://www.openairinterface.org/?page_id=698
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *-------------------------------------------------------------------------------
 * For more information about the OpenAirInterface (OAI) Software Alliance:
 *      contact@openairinterface.org
 */
/**
 * Nudr_DataRepository API OpenAPI file
 * Unified Data Repository Service. Â© 2020, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 2.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * DataChangeNotify.h
 *
 *
 */

#ifndef DataChangeNotify_H_
#define DataChangeNotify_H_

#include <nlohmann/json.hpp>
#include <string>
#include <vector>

#include "NotifyItem.h"
#include "SdmSubscription.h"
#include "SubscriptionDataSubscriptions.h"

namespace oai::udr::model {

/// <summary>
///
/// </summary>
class DataChangeNotify {
public:
  DataChangeNotify();
  virtual ~DataChangeNotify();

  void validate();

  /////////////////////////////////////////////
  /// DataChangeNotify members

  /// <summary>
  ///
  /// </summary>
  std::vector<std::string> &getOriginalCallbackReference();
  void setOriginalCallbackReference(std::vector<std::string> const &value);
  bool originalCallbackReferenceIsSet() const;
  void unsetOriginalCallbackReference();
  /// <summary>
  ///
  /// </summary>
  std::string getUeId() const;
  void setUeId(std::string const &value);
  bool ueIdIsSet() const;
  void unsetUeId();
  /// <summary>
  ///
  /// </summary>
  std::vector<NotifyItem> &getNotifyItems();
  void setNotifyItems(std::vector<NotifyItem> const &value);
  bool notifyItemsIsSet() const;
  void unsetNotifyItems();
  /// <summary>
  ///
  /// </summary>
  SdmSubscription getSdmSubscription() const;
  void setSdmSubscription(SdmSubscription const &value);
  bool sdmSubscriptionIsSet() const;
  void unsetSdmSubscription();
  /// <summary>
  ///
  /// </summary>
  std::vector<SdmSubscription> &getAdditionalSdmSubscriptions();
  void setAdditionalSdmSubscriptions(std::vector<SdmSubscription> const &value);
  bool additionalSdmSubscriptionsIsSet() const;
  void unsetAdditionalSdmSubscriptions();
  /// <summary>
  ///
  /// </summary>
  std::vector<SubscriptionDataSubscriptions> &
  getSubscriptionDataSubscriptions();
  void setSubscriptionDataSubscriptions(
      std::vector<SubscriptionDataSubscriptions> const &value);
  bool subscriptionDataSubscriptionsIsSet() const;
  void unsetSubscriptionDataSubscriptions();

  friend void to_json(nlohmann::json &j, const DataChangeNotify &o);
  friend void from_json(const nlohmann::json &j, DataChangeNotify &o);

protected:
  std::vector<std::string> m_OriginalCallbackReference;
  bool m_OriginalCallbackReferenceIsSet;
  std::string m_UeId;
  bool m_UeIdIsSet;
  std::vector<NotifyItem> m_NotifyItems;
  bool m_NotifyItemsIsSet;
  SdmSubscription m_SdmSubscription;
  bool m_SdmSubscriptionIsSet;
  std::vector<SdmSubscription> m_AdditionalSdmSubscriptions;
  bool m_AdditionalSdmSubscriptionsIsSet;
  std::vector<SubscriptionDataSubscriptions> m_SubscriptionDataSubscriptions;
  bool m_SubscriptionDataSubscriptionsIsSet;
};

} // namespace oai::udr::model

#endif /* DataChangeNotify_H_ */
