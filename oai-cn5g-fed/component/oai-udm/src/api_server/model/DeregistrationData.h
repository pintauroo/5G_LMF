/*
 * Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The OpenAirInterface Software Alliance licenses this file to You under
 * the OAI Public License, Version 1.1  (the "License"); you may not use this
 * file except in compliance with the License. You may obtain a copy of the
 * License at
 *
 *      http://www.openairinterface.org/?page_id=698
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *-------------------------------------------------------------------------------
 * For more information about the OpenAirInterface (OAI) Software Alliance:
 *      contact@openairinterface.org
 */
/**
 * Nudm_UECM
 * Nudm Context Management Service. ï¿½ 2020, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * DeregistrationData.h
 *
 *
 */

#ifndef DeregistrationData_H_
#define DeregistrationData_H_

#include <nlohmann/json.hpp>
#include <string>

#include "AccessType.h"
#include "DeregistrationReason.h"

namespace oai::udm::model {

/// <summary>
///
/// </summary>
class DeregistrationData {
 public:
  DeregistrationData();
  virtual ~DeregistrationData();

  void validate();

  /////////////////////////////////////////////
  /// DeregistrationData members

  /// <summary>
  ///
  /// </summary>
  DeregistrationReason getDeregReason() const;
  void setDeregReason(DeregistrationReason const& value);
  /// <summary>
  ///
  /// </summary>
  AccessType getAccessType() const;
  void setAccessType(AccessType const& value);
  bool accessTypeIsSet() const;
  void unsetAccessType();
  /// <summary>
  ///
  /// </summary>
  int32_t getPduSessionId() const;
  void setPduSessionId(int32_t const value);
  bool pduSessionIdIsSet() const;
  void unsetPduSessionId();
  /// <summary>
  ///
  /// </summary>
  std::string getNewSmfInstanceId() const;
  void setNewSmfInstanceId(std::string const& value);
  bool newSmfInstanceIdIsSet() const;
  void unsetNewSmfInstanceId();

  friend void to_json(nlohmann::json& j, const DeregistrationData& o);
  friend void from_json(const nlohmann::json& j, DeregistrationData& o);

 protected:
  DeregistrationReason m_DeregReason;

  AccessType m_AccessType;
  bool m_AccessTypeIsSet;
  int32_t m_PduSessionId;
  bool m_PduSessionIdIsSet;
  std::string m_NewSmfInstanceId;
  bool m_NewSmfInstanceIdIsSet;
};

}  // namespace oai::udm::model

#endif /* DeregistrationData_H_ */
