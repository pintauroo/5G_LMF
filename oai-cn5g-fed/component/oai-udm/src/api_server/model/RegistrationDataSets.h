/*
 * Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The OpenAirInterface Software Alliance licenses this file to You under
 * the OAI Public License, Version 1.1  (the "License"); you may not use this
 * file except in compliance with the License. You may obtain a copy of the
 * License at
 *
 *      http://www.openairinterface.org/?page_id=698
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *-------------------------------------------------------------------------------
 * For more information about the OpenAirInterface (OAI) Software Alliance:
 *      contact@openairinterface.org
 */
/**
 * Nudm_UECM
 * Nudm Context Management Service. ï¿½ 2020, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * RegistrationDataSets.h
 *
 *
 */

#ifndef RegistrationDataSets_H_
#define RegistrationDataSets_H_

#include <nlohmann/json.hpp>

#include "Amf3GppAccessRegistration.h"
#include "AmfNon3GppAccessRegistration.h"
#include "SmfRegistrationInfo.h"
#include "SmsfRegistration.h"

namespace oai::udm::model {

/// <summary>
///
/// </summary>
class RegistrationDataSets {
 public:
  RegistrationDataSets();
  virtual ~RegistrationDataSets();

  void validate();

  /////////////////////////////////////////////
  /// RegistrationDataSets members

  /// <summary>
  ///
  /// </summary>
  Amf3GppAccessRegistration getAmf3Gpp() const;
  void setAmf3Gpp(Amf3GppAccessRegistration const& value);
  bool amf3GppIsSet() const;
  void unsetAmf3Gpp();
  /// <summary>
  ///
  /// </summary>
  AmfNon3GppAccessRegistration getAmfNon3Gpp() const;
  void setAmfNon3Gpp(AmfNon3GppAccessRegistration const& value);
  bool amfNon3GppIsSet() const;
  void unsetAmfNon3Gpp();
  /// <summary>
  ///
  /// </summary>
  SmfRegistrationInfo getSmfRegistration() const;
  void setSmfRegistration(SmfRegistrationInfo const& value);
  bool smfRegistrationIsSet() const;
  void unsetSmfRegistration();
  /// <summary>
  ///
  /// </summary>
  SmsfRegistration getSmsf3Gpp() const;
  void setSmsf3Gpp(SmsfRegistration const& value);
  bool smsf3GppIsSet() const;
  void unsetSmsf3Gpp();
  /// <summary>
  ///
  /// </summary>
  SmsfRegistration getSmsfNon3Gpp() const;
  void setSmsfNon3Gpp(SmsfRegistration const& value);
  bool smsfNon3GppIsSet() const;
  void unsetSmsfNon3Gpp();

  friend void to_json(nlohmann::json& j, const RegistrationDataSets& o);
  friend void from_json(const nlohmann::json& j, RegistrationDataSets& o);

 protected:
  Amf3GppAccessRegistration m_Amf3Gpp;
  bool m_Amf3GppIsSet;
  AmfNon3GppAccessRegistration m_AmfNon3Gpp;
  bool m_AmfNon3GppIsSet;
  SmfRegistrationInfo m_SmfRegistration;
  bool m_SmfRegistrationIsSet;
  SmsfRegistration m_Smsf3Gpp;
  bool m_Smsf3GppIsSet;
  SmsfRegistration m_SmsfNon3Gpp;
  bool m_SmsfNon3GppIsSet;
};

}  // namespace oai::udm::model

#endif /* RegistrationDataSets_H_ */
