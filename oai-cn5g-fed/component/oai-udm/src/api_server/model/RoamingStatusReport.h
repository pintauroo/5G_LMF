/**
 * Nudm_EE
 * Nudm Event Exposure Service. Â© 2021, 3GPP Organizational Partners (ARIB,
 * ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.2.0-alpha.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * RoamingStatusReport.h
 *
 *
 */

#ifndef RoamingStatusReport_H_
#define RoamingStatusReport_H_

#include "PlmnId.h"
#include <nlohmann/json.hpp>

namespace oai::udm::model {

/// <summary>
///
/// </summary>
class RoamingStatusReport {
 public:
  RoamingStatusReport();
  virtual ~RoamingStatusReport() = default;

  /// <summary>
  /// Validate the current data in the model. Throws a ValidationException on
  /// failure.
  /// </summary>
  void validate() const;

  /// <summary>
  /// Validate the current data in the model. Returns false on error and writes
  /// an error message into the given stringstream.
  /// </summary>
  bool validate(std::stringstream& msg) const;

  bool operator==(const RoamingStatusReport& rhs) const;
  bool operator!=(const RoamingStatusReport& rhs) const;

  /////////////////////////////////////////////
  /// RoamingStatusReport members

  /// <summary>
  ///
  /// </summary>
  bool isRoaming() const;
  void setRoaming(bool const value);
  /// <summary>
  ///
  /// </summary>
  PlmnId getNewServingPlmn() const;
  void setNewServingPlmn(PlmnId const& value);

  friend void to_json(nlohmann::json& j, const RoamingStatusReport& o);
  friend void from_json(const nlohmann::json& j, RoamingStatusReport& o);

 protected:
  bool m_Roaming;

  PlmnId m_NewServingPlmn;

  // Helper overload for validate. Used when one model stores another model and
  // calls it's validate.
  bool validate(std::stringstream& msg, const std::string& pathPrefix) const;
};

}  // namespace oai::udm::model

#endif /* RoamingStatusReport_H_ */
