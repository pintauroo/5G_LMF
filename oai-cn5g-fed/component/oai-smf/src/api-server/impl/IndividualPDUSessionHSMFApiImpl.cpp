/**
 * Nsmf_PDUSession
 * SMF PDU Session Service. Â© 2019, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0.alpha-1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The OpenAirInterface Software Alliance licenses this file to You under
 * the OAI Public License, Version 1.1  (the "License"); you may not use this
 *file except in compliance with the License. You may obtain a copy of the
 *License at
 *
 *      http://www.openairinterface.org/?page_id=698
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *-------------------------------------------------------------------------------
 * For more information about the OpenAirInterface (OAI) Software Alliance:
 *      contact@openairinterface.org
 */

#include "IndividualPDUSessionHSMFApiImpl.h"

namespace oai {
namespace smf_server {
namespace api {

using namespace oai::smf_server::model;

IndividualPDUSessionHSMFApiImpl::IndividualPDUSessionHSMFApiImpl(
    std::shared_ptr<Pistache::Rest::Router> rtr, smf::smf_app* smf_app_inst,
    std::string address)
    : IndividualPDUSessionHSMFApi(rtr),
      m_smf_app(smf_app_inst),
      m_address(address) {}

void IndividualPDUSessionHSMFApiImpl::release_pdu_session(
    const std::string& pduSessionRef, const ReleaseData& releaseData,
    Pistache::Http::ResponseWriter& response) {
  Logger::smf_api_server().info("release_pdu_session...");
  response.send(
      Pistache::Http::Code::Not_Implemented,
      "Release_pdu_session API has not been implemented yet!\n");
}
void IndividualPDUSessionHSMFApiImpl::update_pdu_session(
    const std::string& pduSessionRef, const HsmfUpdateData& hsmfUpdateData,
    Pistache::Http::ResponseWriter& response) {
  Logger::smf_api_server().info("update_pdu_session...");
  response.send(
      Pistache::Http::Code::Not_Implemented,
      "Update_pdu_session API has not been implemented yet!\n");
}

}  // namespace api
}  // namespace smf_server
}  // namespace oai
