/**
 * Nsmf_PDUSession
 * SMF PDU Session Service. Â© 2019, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0.alpha-1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include "NonDynamic5Qi.h"

namespace oai {
namespace smf_server {
namespace model {

NonDynamic5Qi::NonDynamic5Qi() {
  m_PriorityLevel        = 0;
  m_PriorityLevelIsSet   = false;
  m_AverWindow           = 0;
  m_AverWindowIsSet      = false;
  m_MaxDataBurstVol      = 0;
  m_MaxDataBurstVolIsSet = false;
}

NonDynamic5Qi::~NonDynamic5Qi() {}

void NonDynamic5Qi::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json& j, const NonDynamic5Qi& o) {
  j = nlohmann::json();
  if (o.priorityLevelIsSet()) j["priorityLevel"] = o.m_PriorityLevel;
  if (o.averWindowIsSet()) j["averWindow"] = o.m_AverWindow;
  if (o.maxDataBurstVolIsSet()) j["maxDataBurstVol"] = o.m_MaxDataBurstVol;
}

void from_json(const nlohmann::json& j, NonDynamic5Qi& o) {
  if (j.find("priorityLevel") != j.end()) {
    j.at("priorityLevel").get_to(o.m_PriorityLevel);
    o.m_PriorityLevelIsSet = true;
  }
  if (j.find("averWindow") != j.end()) {
    j.at("averWindow").get_to(o.m_AverWindow);
    o.m_AverWindowIsSet = true;
  }
  if (j.find("maxDataBurstVol") != j.end()) {
    j.at("maxDataBurstVol").get_to(o.m_MaxDataBurstVol);
    o.m_MaxDataBurstVolIsSet = true;
  }
}

int32_t NonDynamic5Qi::getPriorityLevel() const {
  return m_PriorityLevel;
}
void NonDynamic5Qi::setPriorityLevel(int32_t const value) {
  m_PriorityLevel      = value;
  m_PriorityLevelIsSet = true;
}
bool NonDynamic5Qi::priorityLevelIsSet() const {
  return m_PriorityLevelIsSet;
}
void NonDynamic5Qi::unsetPriorityLevel() {
  m_PriorityLevelIsSet = false;
}
int32_t NonDynamic5Qi::getAverWindow() const {
  return m_AverWindow;
}
void NonDynamic5Qi::setAverWindow(int32_t const value) {
  m_AverWindow      = value;
  m_AverWindowIsSet = true;
}
bool NonDynamic5Qi::averWindowIsSet() const {
  return m_AverWindowIsSet;
}
void NonDynamic5Qi::unsetAverWindow() {
  m_AverWindowIsSet = false;
}
int32_t NonDynamic5Qi::getMaxDataBurstVol() const {
  return m_MaxDataBurstVol;
}
void NonDynamic5Qi::setMaxDataBurstVol(int32_t const value) {
  m_MaxDataBurstVol      = value;
  m_MaxDataBurstVolIsSet = true;
}
bool NonDynamic5Qi::maxDataBurstVolIsSet() const {
  return m_MaxDataBurstVolIsSet;
}
void NonDynamic5Qi::unsetMaxDataBurstVol() {
  m_MaxDataBurstVolIsSet = false;
}

}  // namespace model
}  // namespace smf_server
}  // namespace oai
