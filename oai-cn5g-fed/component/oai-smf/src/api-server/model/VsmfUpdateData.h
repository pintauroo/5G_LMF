/**
 * Nsmf_PDUSession
 * SMF PDU Session Service. Â© 2019, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0.alpha-1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * VsmfUpdateData.h
 *
 *
 */

#ifndef VsmfUpdateData_H_
#define VsmfUpdateData_H_

#include "Ambr.h"
#include "RequestIndication.h"
#include "EpsBearerInfo.h"
#include "MaReleaseIndication.h"
#include "EbiArpMapping.h"
#include "QosFlowReleaseRequestItem.h"
#include "Cause.h"
#include "RefToBinaryData.h"
#include <string>
#include "QosFlowAddModifyRequestItem.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace oai {
namespace smf_server {
namespace model {

/// <summary>
///
/// </summary>
class VsmfUpdateData {
 public:
  VsmfUpdateData();
  virtual ~VsmfUpdateData();

  void validate();

  /////////////////////////////////////////////
  /// VsmfUpdateData members

  /// <summary>
  ///
  /// </summary>
  RequestIndication getRequestIndication() const;
  void setRequestIndication(RequestIndication const& value);
  /// <summary>
  ///
  /// </summary>
  Ambr getSessionAmbr() const;
  void setSessionAmbr(Ambr const& value);
  bool sessionAmbrIsSet() const;
  void unsetSessionAmbr();
  /// <summary>
  ///
  /// </summary>
  std::vector<QosFlowAddModifyRequestItem>& getQosFlowsAddModRequestList();
  bool qosFlowsAddModRequestListIsSet() const;
  void unsetQosFlowsAddModRequestList();
  /// <summary>
  ///
  /// </summary>
  std::vector<QosFlowReleaseRequestItem>& getQosFlowsRelRequestList();
  bool qosFlowsRelRequestListIsSet() const;
  void unsetQosFlowsRelRequestList();
  /// <summary>
  ///
  /// </summary>
  std::vector<EpsBearerInfo>& getEpsBearerInfo();
  bool epsBearerInfoIsSet() const;
  void unsetEpsBearerInfo();
  /// <summary>
  ///
  /// </summary>
  std::vector<int32_t>& getAssignEbiList();
  bool assignEbiListIsSet() const;
  void unsetAssignEbiList();
  /// <summary>
  ///
  /// </summary>
  std::vector<int32_t>& getRevokeEbiList();
  bool revokeEbiListIsSet() const;
  void unsetRevokeEbiList();
  /// <summary>
  ///
  /// </summary>
  std::vector<EbiArpMapping>& getModifiedEbiList();
  bool modifiedEbiListIsSet() const;
  void unsetModifiedEbiList();
  /// <summary>
  ///
  /// </summary>
  int32_t getPti() const;
  void setPti(int32_t const value);
  bool ptiIsSet() const;
  void unsetPti();
  /// <summary>
  ///
  /// </summary>
  RefToBinaryData getN1SmInfoToUe() const;
  void setN1SmInfoToUe(RefToBinaryData const& value);
  bool n1SmInfoToUeIsSet() const;
  void unsetN1SmInfoToUe();
  /// <summary>
  ///
  /// </summary>
  bool isAlwaysOnGranted() const;
  void setAlwaysOnGranted(bool const value);
  bool alwaysOnGrantedIsSet() const;
  void unsetAlwaysOnGranted();
  /// <summary>
  ///
  /// </summary>
  std::string getHsmfPduSessionUri() const;
  void setHsmfPduSessionUri(std::string const& value);
  bool hsmfPduSessionUriIsSet() const;
  void unsetHsmfPduSessionUri();
  /// <summary>
  ///
  /// </summary>
  std::string getSupportedFeatures() const;
  void setSupportedFeatures(std::string const& value);
  bool supportedFeaturesIsSet() const;
  void unsetSupportedFeatures();
  /// <summary>
  ///
  /// </summary>
  Cause getCause() const;
  void setCause(Cause const& value);
  bool causeIsSet() const;
  void unsetCause();
  /// <summary>
  ///
  /// </summary>
  std::string getN1smCause() const;
  void setN1smCause(std::string const& value);
  bool n1smCauseIsSet() const;
  void unsetN1smCause();
  /// <summary>
  ///
  /// </summary>
  int32_t getBackOffTimer() const;
  void setBackOffTimer(int32_t const value);
  bool backOffTimerIsSet() const;
  void unsetBackOffTimer();
  /// <summary>
  ///
  /// </summary>
  MaReleaseIndication getMaReleaseInd() const;
  void setMaReleaseInd(MaReleaseIndication const& value);
  bool maReleaseIndIsSet() const;
  void unsetMaReleaseInd();

  friend void to_json(nlohmann::json& j, const VsmfUpdateData& o);
  friend void from_json(const nlohmann::json& j, VsmfUpdateData& o);

 protected:
  RequestIndication m_RequestIndication;

  Ambr m_SessionAmbr;
  bool m_SessionAmbrIsSet;
  std::vector<QosFlowAddModifyRequestItem> m_QosFlowsAddModRequestList;
  bool m_QosFlowsAddModRequestListIsSet;
  std::vector<QosFlowReleaseRequestItem> m_QosFlowsRelRequestList;
  bool m_QosFlowsRelRequestListIsSet;
  std::vector<EpsBearerInfo> m_EpsBearerInfo;
  bool m_EpsBearerInfoIsSet;
  std::vector<int32_t> m_AssignEbiList;
  bool m_AssignEbiListIsSet;
  std::vector<int32_t> m_RevokeEbiList;
  bool m_RevokeEbiListIsSet;
  std::vector<EbiArpMapping> m_ModifiedEbiList;
  bool m_ModifiedEbiListIsSet;
  int32_t m_Pti;
  bool m_PtiIsSet;
  RefToBinaryData m_N1SmInfoToUe;
  bool m_N1SmInfoToUeIsSet;
  bool m_AlwaysOnGranted;
  bool m_AlwaysOnGrantedIsSet;
  std::string m_HsmfPduSessionUri;
  bool m_HsmfPduSessionUriIsSet;
  std::string m_SupportedFeatures;
  bool m_SupportedFeaturesIsSet;
  Cause m_Cause;
  bool m_CauseIsSet;
  std::string m_N1smCause;
  bool m_N1smCauseIsSet;
  int32_t m_BackOffTimer;
  bool m_BackOffTimerIsSet;
  MaReleaseIndication m_MaReleaseInd;
  bool m_MaReleaseIndIsSet;
};

}  // namespace model
}  // namespace smf_server
}  // namespace oai

#endif /* VsmfUpdateData_H_ */
