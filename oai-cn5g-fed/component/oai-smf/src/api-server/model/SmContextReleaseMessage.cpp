/**
 * Nsmf_PDUSession
 * SMF PDU Session Service. Â© 2019, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0.alpha-1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

#include <iostream>
#include "SmContextReleaseMessage.h"

namespace oai {
namespace smf_server {
namespace model {

SmContextReleaseMessage::SmContextReleaseMessage() {
  m_JsonDataIsSet                  = false;
  m_BinaryDataN2SmInformationIsSet = false;
}

SmContextReleaseMessage::~SmContextReleaseMessage() {}

void SmContextReleaseMessage::validate() {
  // TODO: implement validation
}

void to_json(nlohmann::json& j, const SmContextReleaseMessage& o) {
  j = nlohmann::json();
  if (o.jsonDataIsSet()) j["jsonData"] = o.m_JsonData;
  if (o.binaryDataN2SmInformationIsSet())
    j["binaryDataN2SmInformation"] = o.m_BinaryDataN2SmInformation;
}

void from_json(const nlohmann::json& j, SmContextReleaseMessage& o) {
  if (j.find("jsonData") != j.end()) {
    j.at("jsonData").get_to(o.m_JsonData);
    o.m_JsonDataIsSet = true;
  }
  if (j.find("binaryDataN2SmInformation") != j.end()) {
    j.at("binaryDataN2SmInformation").get_to(o.m_BinaryDataN2SmInformation);
    o.m_BinaryDataN2SmInformationIsSet = true;
  }
}

SmContextReleaseData SmContextReleaseMessage::getJsonData() const {
  return m_JsonData;
}
void SmContextReleaseMessage::setJsonData(SmContextReleaseData const& value) {
  m_JsonData      = value;
  m_JsonDataIsSet = true;
}
bool SmContextReleaseMessage::jsonDataIsSet() const {
  return m_JsonDataIsSet;
}
void SmContextReleaseMessage::unsetJsonData() {
  m_JsonDataIsSet = false;
}

std::string SmContextReleaseMessage::getBinaryDataN2SmInformation() const {
  return m_BinaryDataN2SmInformation;
}
void SmContextReleaseMessage::setBinaryDataN2SmInformation(
    std::string const& value) {
  m_BinaryDataN2SmInformation      = value;
  m_BinaryDataN2SmInformationIsSet = true;
}
bool SmContextReleaseMessage::binaryDataN2SmInformationIsSet() const {
  return m_BinaryDataN2SmInformationIsSet;
}
void SmContextReleaseMessage::unsetBinaryDataN2SmInformation() {
  m_BinaryDataN2SmInformationIsSet = false;
}

}  // namespace model
}  // namespace smf_server
}  // namespace oai
