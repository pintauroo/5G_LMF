/**
 * Nsmf_PDUSession
 * SMF PDU Session Service. Â© 2019, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0.alpha-1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * SmContextCreateData.h
 *
 *
 */

#ifndef SmContextCreateData_H_
#define SmContextCreateData_H_

#include "NgRanTargetId.h"
#include "RatType.h"
#include "RefToBinaryData.h"
#include <string>
#include "BackupAmfInfo.h"
#include "PlmnId.h"
#include "Snssai.h"
#include "TraceData.h"
#include <vector>
#include "AccessType.h"
#include "DnnSelectionMode.h"
#include "EpsInterworkingIndication.h"
#include "ServiceName.h"
#include "UserLocation.h"
#include "HoState.h"
#include "PresenceState.h"
#include "RequestType.h"
#include "Guami.h"
#include <nlohmann/json.hpp>

namespace oai {
namespace smf_server {
namespace model {

/// <summary>
///
/// </summary>
class SmContextCreateData {
 public:
  SmContextCreateData();
  virtual ~SmContextCreateData();

  void validate();

  /////////////////////////////////////////////
  /// SmContextCreateData members

  /// <summary>
  ///
  /// </summary>
  std::string getSupi() const;
  void setSupi(std::string const& value);
  bool supiIsSet() const;
  void unsetSupi();
  /// <summary>
  ///
  /// </summary>
  bool isUnauthenticatedSupi() const;
  void setUnauthenticatedSupi(bool const value);
  bool unauthenticatedSupiIsSet() const;
  void unsetUnauthenticatedSupi();
  /// <summary>
  ///
  /// </summary>
  std::string getPei() const;
  void setPei(std::string const& value);
  bool peiIsSet() const;
  void unsetPei();
  /// <summary>
  ///
  /// </summary>
  std::string getGpsi() const;
  void setGpsi(std::string const& value);
  bool gpsiIsSet() const;
  void unsetGpsi();
  /// <summary>
  ///
  /// </summary>
  uint8_t getPduSessionId() const;
  void setPduSessionId(int32_t const value);
  bool pduSessionIdIsSet() const;
  void unsetPduSessionId();
  /// <summary>
  ///
  /// </summary>
  std::string getDnn() const;
  void setDnn(std::string const& value);
  bool dnnIsSet() const;
  void unsetDnn();
  /// <summary>
  ///
  /// </summary>
  Snssai getSNssai() const;
  void setSNssai(Snssai const& value);
  bool sNssaiIsSet() const;
  void unsetSNssai();
  /// <summary>
  ///
  /// </summary>
  Snssai getHplmnSnssai() const;
  void setHplmnSnssai(Snssai const& value);
  bool hplmnSnssaiIsSet() const;
  void unsetHplmnSnssai();
  /// <summary>
  ///
  /// </summary>
  std::string getServingNfId() const;
  void setServingNfId(std::string const& value);
  /// <summary>
  ///
  /// </summary>
  Guami getGuami() const;
  void setGuami(Guami const& value);
  bool guamiIsSet() const;
  void unsetGuami();
  /// <summary>
  ///
  /// </summary>
  std::string getServiceName() const;
  void setServiceName(std::string const& value);
  bool serviceNameIsSet() const;
  void unsetServiceName();
  /// <summary>
  ///
  /// </summary>
  PlmnId getServingNetwork() const;
  void setServingNetwork(PlmnId const& value);
  /// <summary>
  ///
  /// </summary>
  std::string getRequestType() const;
  void setRequestType(std::string const& value);
  bool requestTypeIsSet() const;
  void unsetRequestType();
  /// <summary>
  ///
  /// </summary>
  RefToBinaryData getN1SmMsg() const;
  void setN1SmMsg(RefToBinaryData const& value);
  bool n1SmMsgIsSet() const;
  void unsetN1SmMsg();
  /// <summary>
  ///
  /// </summary>
  std::string getAnType() const;
  void setAnType(std::string const& value);
  /// <summary>
  ///
  /// </summary>
  std::string getSecondAnType() const;
  void setSecondAnType(std::string const& value);
  bool secondAnTypeIsSet() const;
  void unsetSecondAnType();
  /// <summary>
  ///
  /// </summary>
  std::string getRatType() const;
  void setRatType(std::string const& value);
  bool ratTypeIsSet() const;
  void unsetRatType();
  /// <summary>
  ///
  /// </summary>
  std::string getPresenceInLadn() const;
  void setPresenceInLadn(std::string const& value);
  bool presenceInLadnIsSet() const;
  void unsetPresenceInLadn();
  /// <summary>
  ///
  /// </summary>
  UserLocation getUeLocation() const;
  void setUeLocation(UserLocation const& value);
  bool ueLocationIsSet() const;
  void unsetUeLocation();
  /// <summary>
  ///
  /// </summary>
  std::string getUeTimeZone() const;
  void setUeTimeZone(std::string const& value);
  bool ueTimeZoneIsSet() const;
  void unsetUeTimeZone();
  /// <summary>
  ///
  /// </summary>
  UserLocation getAddUeLocation() const;
  void setAddUeLocation(UserLocation const& value);
  bool addUeLocationIsSet() const;
  void unsetAddUeLocation();
  /// <summary>
  ///
  /// </summary>
  std::string getSmContextStatusUri() const;
  void setSmContextStatusUri(std::string const& value);
  /// <summary>
  ///
  /// </summary>
  std::string getHSmfUri() const;
  void setHSmfUri(std::string const& value);
  bool hSmfUriIsSet() const;
  void unsetHSmfUri();
  /// <summary>
  ///
  /// </summary>
  std::vector<std::string>& getAdditionalHsmfUri();
  bool additionalHsmfUriIsSet() const;
  void unsetAdditionalHsmfUri();
  /// <summary>
  ///
  /// </summary>
  int32_t getOldPduSessionId() const;
  void setOldPduSessionId(int32_t const value);
  bool oldPduSessionIdIsSet() const;
  void unsetOldPduSessionId();
  /// <summary>
  ///
  /// </summary>
  std::vector<int32_t>& getPduSessionsActivateList();
  bool pduSessionsActivateListIsSet() const;
  void unsetPduSessionsActivateList();
  /// <summary>
  ///
  /// </summary>
  std::string getUeEpsPdnConnection() const;
  void setUeEpsPdnConnection(std::string const& value);
  bool ueEpsPdnConnectionIsSet() const;
  void unsetUeEpsPdnConnection();
  /// <summary>
  ///
  /// </summary>
  std::string getHoState() const;
  void setHoState(std::string const& value);
  bool hoStateIsSet() const;
  void unsetHoState();
  /// <summary>
  ///
  /// </summary>
  std::string getPcfId() const;
  void setPcfId(std::string const& value);
  bool pcfIdIsSet() const;
  void unsetPcfId();
  /// <summary>
  ///
  /// </summary>
  std::string getNrfUri() const;
  void setNrfUri(std::string const& value);
  bool nrfUriIsSet() const;
  void unsetNrfUri();
  /// <summary>
  ///
  /// </summary>
  std::string getSupportedFeatures() const;
  void setSupportedFeatures(std::string const& value);
  bool supportedFeaturesIsSet() const;
  void unsetSupportedFeatures();
  /// <summary>
  ///
  /// </summary>
  std::string getSelMode() const;
  void setSelMode(std::string const& value);
  bool selModeIsSet() const;
  void unsetSelMode();
  /// <summary>
  ///
  /// </summary>
  std::vector<BackupAmfInfo>& getBackupAmfInfo();
  bool backupAmfInfoIsSet() const;
  void unsetBackupAmfInfo();
  /// <summary>
  ///
  /// </summary>
  TraceData getTraceData() const;
  void setTraceData(TraceData const& value);
  bool traceDataIsSet() const;
  void unsetTraceData();
  /// <summary>
  ///
  /// </summary>
  std::string getUdmGroupId() const;
  void setUdmGroupId(std::string const& value);
  bool udmGroupIdIsSet() const;
  void unsetUdmGroupId();
  /// <summary>
  ///
  /// </summary>
  std::string getRoutingIndicator() const;
  void setRoutingIndicator(std::string const& value);
  bool routingIndicatorIsSet() const;
  void unsetRoutingIndicator();
  /// <summary>
  ///
  /// </summary>
  EpsInterworkingIndication getEpsInterworkingInd() const;
  void setEpsInterworkingInd(EpsInterworkingIndication const& value);
  bool epsInterworkingIndIsSet() const;
  void unsetEpsInterworkingInd();
  /// <summary>
  ///
  /// </summary>
  bool isIndirectForwardingFlag() const;
  void setIndirectForwardingFlag(bool const value);
  bool indirectForwardingFlagIsSet() const;
  void unsetIndirectForwardingFlag();
  /// <summary>
  ///
  /// </summary>
  NgRanTargetId getTargetId() const;
  void setTargetId(NgRanTargetId const& value);
  bool targetIdIsSet() const;
  void unsetTargetId();
  /// <summary>
  ///
  /// </summary>
  std::string getEpsBearerCtxStatus() const;
  void setEpsBearerCtxStatus(std::string const& value);
  bool epsBearerCtxStatusIsSet() const;
  void unsetEpsBearerCtxStatus();
  /// <summary>
  ///
  /// </summary>
  bool isCpCiotEnabled() const;
  void setCpCiotEnabled(bool const value);
  bool cpCiotEnabledIsSet() const;
  void unsetCpCiotEnabled();
  /// <summary>
  ///
  /// </summary>
  bool isInvokeNef() const;
  void setInvokeNef(bool const value);
  bool invokeNefIsSet() const;
  void unsetInvokeNef();
  /// <summary>
  ///
  /// </summary>
  bool isMaPduIndication() const;
  void setMaPduIndication(bool const value);
  bool maPduIndicationIsSet() const;
  void unsetMaPduIndication();
  /// <summary>
  ///
  /// </summary>
  RefToBinaryData getN2SmInfo() const;
  void setN2SmInfo(RefToBinaryData const& value);
  bool n2SmInfoIsSet() const;
  void unsetN2SmInfo();
  /// <summary>
  ///
  /// </summary>
  std::string getSmContextRef() const;
  void setSmContextRef(std::string const& value);
  bool smContextRefIsSet() const;
  void unsetSmContextRef();

  friend void to_json(nlohmann::json& j, const SmContextCreateData& o);
  friend void from_json(const nlohmann::json& j, SmContextCreateData& o);

 protected:
  std::string m_Supi;
  bool m_SupiIsSet;
  bool m_UnauthenticatedSupi;
  bool m_UnauthenticatedSupiIsSet;
  std::string m_Pei;
  bool m_PeiIsSet;
  std::string m_Gpsi;
  bool m_GpsiIsSet;
  uint8_t m_PduSessionId;
  bool m_PduSessionIdIsSet;
  std::string m_Dnn;
  bool m_DnnIsSet;
  Snssai m_SNssai;
  bool m_SNssaiIsSet;
  Snssai m_HplmnSnssai;
  bool m_HplmnSnssaiIsSet;
  std::string m_ServingNfId;

  Guami m_Guami;
  bool m_GuamiIsSet;
  std::string m_ServiceName;
  bool m_ServiceNameIsSet;
  PlmnId m_ServingNetwork;

  std::string m_RequestType;
  bool m_RequestTypeIsSet;
  RefToBinaryData m_N1SmMsg;
  bool m_N1SmMsgIsSet;
  std::string m_AnType;

  std::string m_SecondAnType;
  bool m_SecondAnTypeIsSet;
  std::string m_RatType;
  bool m_RatTypeIsSet;
  std::string m_PresenceInLadn;
  bool m_PresenceInLadnIsSet;
  UserLocation m_UeLocation;
  bool m_UeLocationIsSet;
  std::string m_UeTimeZone;
  bool m_UeTimeZoneIsSet;
  UserLocation m_AddUeLocation;
  bool m_AddUeLocationIsSet;
  std::string m_SmContextStatusUri;

  std::string m_HSmfUri;
  bool m_HSmfUriIsSet;
  std::vector<std::string> m_AdditionalHsmfUri;
  bool m_AdditionalHsmfUriIsSet;
  int32_t m_OldPduSessionId;
  bool m_OldPduSessionIdIsSet;
  std::vector<int32_t> m_PduSessionsActivateList;
  bool m_PduSessionsActivateListIsSet;
  std::string m_UeEpsPdnConnection;
  bool m_UeEpsPdnConnectionIsSet;
  std::string m_HoState;
  bool m_HoStateIsSet;
  std::string m_PcfId;
  bool m_PcfIdIsSet;
  std::string m_NrfUri;
  bool m_NrfUriIsSet;
  std::string m_SupportedFeatures;
  bool m_SupportedFeaturesIsSet;
  std::string m_SelMode;
  bool m_SelModeIsSet;
  std::vector<BackupAmfInfo> m_BackupAmfInfo;
  bool m_BackupAmfInfoIsSet;
  TraceData m_TraceData;
  bool m_TraceDataIsSet;
  std::string m_UdmGroupId;
  bool m_UdmGroupIdIsSet;
  std::string m_RoutingIndicator;
  bool m_RoutingIndicatorIsSet;
  EpsInterworkingIndication m_EpsInterworkingInd;
  bool m_EpsInterworkingIndIsSet;
  bool m_IndirectForwardingFlag;
  bool m_IndirectForwardingFlagIsSet;
  NgRanTargetId m_TargetId;
  bool m_TargetIdIsSet;
  std::string m_EpsBearerCtxStatus;
  bool m_EpsBearerCtxStatusIsSet;
  bool m_CpCiotEnabled;
  bool m_CpCiotEnabledIsSet;
  bool m_InvokeNef;
  bool m_InvokeNefIsSet;
  bool m_MaPduIndication;
  bool m_MaPduIndicationIsSet;
  RefToBinaryData m_N2SmInfo;
  bool m_N2SmInfoIsSet;
  std::string m_SmContextRef;
  bool m_SmContextRefIsSet;
};

}  // namespace model
}  // namespace smf_server
}  // namespace oai

#endif /* SmContextCreateData_H_ */
