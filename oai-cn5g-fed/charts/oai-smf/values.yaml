# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

namespace: "oai"

nfimage:
  registry: local
  repository: oai-smf          # dockerhub rdefosseoai/oai-smf
  version: develop             # develop for experimental features
  #pullPolicy: IfNotPresent or Never or Always
  pullPolicy: Always

tcpdumpimage:
  registry: local
  repository: corfr/tcpdump
  version: latest
  #pullPolicy: IfNotPresent or Never or Always
  pullPolicy: Always


## good to use when pulling images from docker-hub mention 
#imagePullSecrets: 
#  - name: "personalkey"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "oai-smf-sa"

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

securityContext:
  privileged: false

service:
  type: ClusterIP
  n4Port: 8805
  http1Port: 80
  http2Port: 9090

start:
  smf: true
  tcpdump: false  #start tcpdump collection to analyse but beware it will take a lot of space in the container/persistent volume

# create multus only if there is a need to have seperate N4 and Nsmf interfaces
multus:
  create: true
  n4IPadd: "192.168.18.178"
  n4Netmask: "24"
  n4Gw: "192.168.18.129"
  hostInterface: "bond0"

config:
  instance: "0"
  pidDirectory: "/var/run"
  smfInterfaceNameForN4: "net1"  # net1 if multus creation is true else eth0
  smfInterfaceNameForSBI: "eth0" 
  smfInterfacePortForSBI: "80"
  smfInterfaceHttp2PortForSBI: "9090"
  smfApiVersion: "v1"
  dnsIpv4Address: "192.168.18.129" # configure the dns for UE don't use Kubernetes DNS
  dnsSecIpv4Address: "192.168.18.129" # configure the dns for UE don't use Kubernetes DNS
  registerNrf: "yes" # if wants to use NRF registry and discovery
  discoverUpf: "yes" # discovery UPF 
  useFqdnDns: "yes" # use only when the DNS can resolve FQDN of other network functions
  amfIpv4Address: "127.0.0.1" # configure if NRF is not used 
  amfPort: "80" # configure if NRF is not used
  amfApiVersion: "v1" # configure if NRF is not used
  amfFqdn: "oai-amf-svc" # configure if NRF is not used
  udmIpv4Address: "127.0.0.1" # configure if UDM is used
  udmPort: "80" # configure if UDM is used
  udmApiVersion: "v2" # configure if UDM is used
  udmFqdn: "localhost" # configure if UDM is used
  nrfIpv4Address: "127.0.0.1" # configure if NRF can only be reached using ip-address
  nrfPort : "80" 
  nrfApiVersion: "v1"
  nrfFqdn: "oai-nrf-svc" # configure if NRF can be reached using Kubernetes service
  upfIpv4Address: "127.0.0.1" # configure if NRF is not used 
  upfFqdn0: "oai-spgwu-svc" # configure if NRF is not used and useFqdnDns is true
    
## currently only used by tcpdump container to store the tcpdump, this volume will be shared between all the network functions
persistence:
  sharedvolume: false  # should be true when if wants to store the tcpdump of all the network functions at same place
  volumneName: managed-nfs-storage
  size: 1Gi


resources:
  define: false
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
   cpu: 100m
   memory: 256Mi

readinessProbe: true

livenessProbe: true

terminationGracePeriodSeconds: 30

nodeSelector: {}

nodeName: 
