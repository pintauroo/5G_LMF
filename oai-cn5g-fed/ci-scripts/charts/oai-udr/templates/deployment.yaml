apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    {{- include "oai-udr.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "oai-udr.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "oai-udr.selectorLabels" . | nindent 8 }}
    {{- if .Values.multus.create }}
      annotations:
        k8s.v1.cni.cncf.io/networks: {{ .Chart.Name }}-{{ .Values.namespace }}-net1
    {{- end }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
      - name: tcpdump
        image: image-registry.openshift-image-registry.svc:5000/oai/tcpdump-internal:latest
        {{- if .Values.start.tcpdump}}
        command:
          - /bin/sh
          - -c
          - /usr/sbin/tcpdump -i any -w /pcap/oai-udr_`date +%Y-%m-%d_%H_%M-%S-%Z`.pcap
        {{- else}}
        command:
          - /bin/sleep
          - infinity
        {{- end}}
        volumeMounts:
        - mountPath: "/pcap"
          name: cn5g-pv
      - name: udr
        image: "{{ .Values.image.repository }}:{{ .Values.image.version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        ports:
        - containerPort: {{ .Values.service.http1Port }}
          name: http1
        - containerPort: {{ .Values.service.http2Port }}
          name: http2
        {{- if .Values.start.udr}}
        {{- else}}
        command:
          - /bin/sleep
          - infinity
        {{- end}}
        env:
          - name: TZ
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: tz     
          - name: INSTANCE
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: instance
          - name: PID_DIRECTORY
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: pidDirectory
          - name: UDR_INTERFACE_NAME_FOR_NUDR
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: udrInterfaceNameForNudr
          - name: UDR_INTERFACE_PORT_FOR_NUDR
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: udrInterfaceHttp1PortForNudr
          - name: UDR_INTERFACE_HTTP2_PORT_FOR_NUDR
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: udrInterfaceHttp2PortForNudr
          - name: UDR_API_VERSION
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: udrApiVersion
          - name: MYSQL_IPV4_ADDRESS
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: mySqlServer
          - name: MYSQL_USER
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: mySqlUser
          - name: MYSQL_PASS
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: mySqlPass
          - name: MYSQL_DB
            valueFrom:
              configMapKeyRef:
                name: {{ .Chart.Name }}-configmap
                key: mySqlDb
        {{- if .Values.start.udr}}
        {{- else}}
        command:
          - /bin/sleep
          - infinity
        {{- end}}
      volumes:
      - name: cn5g-pv
        persistentVolumeClaim:
          claimName: cn5g-pvc
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccountName: {{ .Values.serviceAccount.name }}
      terminationGracePeriodSeconds: 15
